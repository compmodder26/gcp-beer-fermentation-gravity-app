name: GCP Beer Fermentation App CICD

on:
  push:
  pull_request:
    
env:
  GOOGLE_APPLICATION_CREDENTIALS_DATA: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}
  
jobs:
  terraform-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "terraform"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.0
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -no-color -input=false -var deployment_version=1

  lint-add_batch_reading:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/add_batch_reading/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/add_batch_reading
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number

  lint-delete_batch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/delete_batch/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/delete_batch
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number

  lint-get_batch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/get_batch/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/get_batch
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number

  lint-get_batch_readings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/get_batch_readings/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/get_batch_readings
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number

  lint-list_batches:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/new_batch/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/new_batch
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number

  lint-new_batch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/new_batch/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/new_batch
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number

  lint-update_batch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: cloud_functions/update_batch/go.mod
          
      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: "latest"
          working-directory: cloud_functions/update_batch
          # this format is used to also display the file & line number in the workflow's output
          # without this, lint errors are only displayed in the "Files changed" tab
          # see this issue for more information
          # https://github.com/golangci/golangci-lint-action/issues/119
          args: --timeout=5m --out-${NO_FUTURE}format colored-line-number
          
  lint-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm ci
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          eslint_dir: frontend
          
  deploy:
    needs: [ 
        terraform-ci, 
        lint-frontend, 
        lint-update_batch, 
        lint-new_batch, 
        lint-list_batches, 
        lint-get_batch_readings, 
        lint-get_batch, 
        lint-delete_batch, 
        lint-add_batch_reading 
      ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "terraform"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.0
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -no-color -input=false -var deployment_version=1 -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false tfplan
